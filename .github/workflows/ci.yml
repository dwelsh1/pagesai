name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: "file:./prisma/test.db"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Cache Prisma
        uses: actions/cache@v4
        with:
          path: node_modules/.prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('**/package-lock.json') }}

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Setup Database
        run: npx prisma db push --accept-data-loss

      - name: Typecheck
        run: npm run tsc

      - name: Lint (ESLint)
        run: npm run lint

      - name: Prettier (format check)
        run: npm run format

      - name: Unit tests (Vitest)
        run: npm run test:unit -- --coverage

      - name: Build (Next.js)
        run: npm run build

      - name: Security Audit
        run: npm audit --audit-level=moderate
        if: always()

      - name: Upload coverage (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: Comment Coverage
        uses: romeovs/lcov-reporter-action@v0.3.1
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: coverage/lcov.info
